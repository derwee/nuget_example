# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net


name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    #List everything
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}

    - name: List Variables
      run: |
        printenv

    - name: Restore dependencies
      run: dotnet restore ${GITHUB_WORKSPACE}/simple_example.sln

    - name: Build
      run: dotnet build --no-restore --configuration Release ${GITHUB_WORKSPACE}/simple_example.sln

    - name: Test
      run: dotnet test --verbosity normal ${GITHUB_WORKSPACE}/tests/tests.csproj

    - name: Version and Tag
      id: bump_version
      uses: mathieudutour/github-tag-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Prep Version String
      run: echo "VERSION_NUMBER=$(echo ${{ steps.bump_version.outputs.new_tag }} | sed 's/[v]//g')" >> $MY_ENV_VAR"

    - name: Dump
      run: echo $MY_ENV_VAR
    # - name: Define Package Name
    #   run: echo ::set-env name=PACKAGE_NAME::$"simple_example/bin/Release/simple_example.${{ env.VERSION_NUMBER }}.nupkg"

    # - name: Set Nuget Package Version
    #   uses: roryprimrose/set-vs-sdk-project-version@v1
    #   with:
    #     version: ${{ env.VERSION_NUMBER }}

    # - name: Pack
    #   run: dotnet pack --configuration Release ${GITHUB_WORKSPACE}/simple_example.sln

    # - name: Publish Package
    #   run: dotnet nuget push ${GITHUB_WORKSPACE}/simple_example/bin/Release/*.nupkg --source https://nuget.pkg.github.com/derwee/index.json

    # - name: Create Release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ steps.bump_version.outputs.new_tag }}
    #     release_name: Release ${{ github.ref }}